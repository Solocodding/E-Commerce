<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            color: #333;
            line-height: 1.6;
        }

        .cart-header {
            display: flex;
            /* height: 200px; */
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            background-color: #649bcf;
            border-bottom: 1px solid #ddd;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .total-price-container {
            display: flex;
            align-items: center;
            flex-direction: column;
            font-size: 18px;
            color: white;
        }

        .cart-header h2 {
            font-size: 24px;
            font-weight: bold;
            color: #fff;
            margin-left: 10px;
        }

        .place-order-btn {
            background-color: green;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .place-order-btn:hover {
            background-color: green;
            transform: translateY(-2px);
        }

        .cart-products-container {
            margin: 20px 70px;
            background-color: antiquewhite;
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            padding: 20px;
        }

        .cart-card {
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 300px;
            height: 500px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            display: flex;
            flex-direction: column;
            padding: 10px;
        }

        .cart-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

        .cart-product-image-container {
            width: 100%;
            height: 60%;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f1f1f1;
        }

        .cart-product-image {
            width: auto;
            height: 100%;
            display: block;
        }

        .about-cart-image-container {
            height: 40%;
            padding: 10px 15px;
            text-align: center;
        }

        .cart-product-name {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }

        .cart-product-description {
            overflow: hidden;
            max-height: 20px;
            font-size: 14px;
            color: #555;
            margin-bottom: 10px;
        }

        .cart-product-price,
        .cart-product-stock {
            font-size: 14px;
            margin-bottom: 10px;
            color: #007bff;
        }

        .cart-btn-container {
            display: flex;
            justify-content: space-around;
            align-items: center;
            padding-top: 10px;
        }

        .remove-from-cart-btn,
        .increase-quantity-btn,
        .decrease-quantity-btn {
            background-color: #007bff;
            color: #fff;
            padding: 8px 12px;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .remove-from-cart-btn {
            background-color: #ec4757;
        }

        .remove-from-cart-btn:hover {
            background-color: #dc3545;
        }

        .increase-quantity-btn:hover,
        .decrease-quantity-btn:hover {
            background-color: #0056b3;
        }

        .d-flex {
            display: flex;
            justify-content: center;
        }

        .backToHome {
            display: inline-block;
            width: 34px;
            height: 34px;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath d='M12 3l9 8h-3v7h-4v-4h-4v4H6v-7H3l9-8z' fill='%23000'%3E%3C/path%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-size: contain;
            background-position: center;
            text-decoration: none;
            /* Remove underline */
            cursor: pointer;
        }


        /* Responsive Design */
        @media (max-width: 768px) {
            .cart-header {
                flex-direction: column;
                align-items: flex-start;
                padding: 10px;
            }

            .cart-products-container {
                flex-direction: column;
                align-items: center;
                padding: 10px;
            }

            .cart-card {
                width: 90%;
            }
        }
    </style>
</head>


<body>
    <div class="cart-header">
        <a class="backToHome" href="/"></a>
        <h2>Cart Items</h2>
        <span class="total-price-container">
            <div class="d-flex">
                <div class="">Total Price: </div>
                <div class="ms-2" id="totalPrice">$0.00</div>
            </div>
            click below button to place order<br>
            <button class="place-order-btn" onclick=placeOrder()>Place Order</button>
        </span>
    </div>
    <div class="cart-products-container">
        <!-- const products = cartProducts.products.map(product => product.productId); -->
        <% if (cart.length> 0) { %>
            <% cart.forEach(product=> { %>
                <div class="cart-card" id="product-<%= product.productId._id %>">
                    <div class="cart-product-image-container">
                        <img src="<%= product.productId.imageUrl %>" alt="<%= product.productId.name %>"
                            class="cart-product-image">
                    </div>
                    <div class="about-cart-image-container">
                        <h3 class="cart-product-name">
                            <%= product.productId.name %>
                        </h3>
                        <p class="cart-product-description">
                            <%= product.productId.description %>
                        </p>
                        <p class="cart-product-price">Price:$ <span class="productPrice">
                                <%= product.productId.price %>
                            </span>
                        </p>
                        <p class="cart-product-stock">
                            Stock:
                            <% if (product.productId.stock>= 1) { %>
                                available
                                <% } else { %>
                                    Out of stock
                                    <% } %>
                        </p>
                        <p class="cart-product-quantity">Quantity:<span class="productQuan">
                                <%= product.quantity %>
                            </span>
                        </p>
                    </div>
                    <div class="cart-btn-container">
                        <button class="remove-from-cart-btn" onclick="removeFromCart('<%= product.productId._id %>')">
                            Remove from Cart
                        </button>
                        <div class="cart-quantity-update-btn">
                            <button class="decrease-quantity-btn"
                                onclick="updateCartQuantity('<%= product.productId._id %>','decrease')">
                                -
                            </button>
                            <button class="increase-quantity-btn"
                                onclick="updateCartQuantity('<%= product.productId._id %>','increase')">
                                +
                            </button>
                        </div>
                    </div>
                </div>
                <% }) %>
                    <% } else { %>
                        <h2>No Products to Display</h2>
                        <% } %>

                            <script>
                                let totalPrice = 0.00;
                                // Calculate total price
                                function calculateTotalPrice() {
                                    totalPrice = 0.00;
                                    // Loop through each product in the cart and calculate the total price
                                    document.querySelectorAll('.cart-card').forEach(card => {
                                        const price = parseFloat(card.querySelector('.productPrice').textContent); // Get price
                                        const quantity = parseInt(card.querySelector('.productQuan').textContent); // Get quantity
                                        totalPrice += price * quantity;
                                    });

                                    // Update the total price in the DOM
                                    document.getElementById('totalPrice').textContent = `$${totalPrice.toFixed(2)}`;
                                }

                                // Call the function when the page loads to calculate the initial total price
                                document.addEventListener('DOMContentLoaded', () => {
                                    calculateTotalPrice();
                                });

                                function removeFromCart(productId) {
                                    fetch('/cart/remove', {
                                        method: 'DELETE',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({
                                            productId: productId,
                                        }),
                                    })
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.message === "Product removed from cart") {
                                                // alert("Product removed from cart");
                                                document.getElementById(`product-${productId}`).remove();
                                                calculateTotalPrice();
                                            }
                                        })
                                        .catch((error) => {
                                            console.error('Error:', error);
                                        });
                                }

                                function updateCartQuantity(productId, action) {
                                    fetch('/cart/update-quantity', {
                                        method: 'PUT',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({ productId, action }),
                                    })
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.message === "Product quantity updated") {
                                                
                                                // Correctly target the quantity element
                                                const quantityElement = document.querySelector(`#product-${productId} .productQuan`);
                                                let currentQuantity = parseInt(quantityElement.textContent);
                                                
                                                // Update the quantity based on the action
                                                if (action === 'increase') {
                                                    currentQuantity += 1;
                                                } else if (action === 'decrease' && currentQuantity > 0) {
                                                    currentQuantity -= 1;
                                                }
                                                
                                                // Update the quantity in the DOM
                                                quantityElement.textContent = currentQuantity;

                                                calculateTotalPrice(); // Update total price dynamically
                                            }
                                        })
                                        .catch(console.error);
                                }


                                function placeOrder() {
                                    // console.log('check 1');/////////////////////////////
                                    fetch('/order/createOrder', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        }
                                    })
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.message === 'Order placed successfully') {
                                                alert('Order placed successfully!');
                                                window.location.href = '/';
                                            } else {
                                                alert(data.message);
                                            }
                                        })
                                        .catch((error) => {
                                            console.error('Error:', error);
                                            alert('An error occurred while creating the order. Please try again.');
                                        });
                                }


                            </script>
</body>

</html>